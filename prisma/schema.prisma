generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post {
  id Int @id @default(autoincrement())
  title String
  content String
  published Boolean @default(false)
  author String
  authorId Int
  users User @relation(fields: [authorId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  postCatagory PostCatagory[]
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  @@map("posts")
}


model User {
  id Int @id @default(autoincrement())
  username String
  email String @unique
  role userRole @default(user)
  profile Profile? // one to one 
  post Post[]  //one to Many
  @@map("users")
}

enum userRole {
  user
  admin
}

model Profile {
  id Int @id @default(autoincrement())
  bio String?
  userId Int @unique
  user User @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)

  @@map("profiles")  // model name change but---> optional

}

model Catagory {
  id Int @id @default(autoincrement())
  name String
  postCatagory PostCatagory[]

  @@map("catagorys")
}


// many to many
model PostCatagory{
  postId Int
  post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  catagoryId Int 
  catagory Catagory @relation(fields: [catagoryId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  @@id([postId,catagoryId])
}